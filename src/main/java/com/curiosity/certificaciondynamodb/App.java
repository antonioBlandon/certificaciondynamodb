/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.curiosity.certificaciondynamodb;

import com.amazonaws.auth.*;
import com.amazonaws.client.builder.AwsClientBuilder;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder;
import com.amazonaws.services.dynamodbv2.document.DynamoDB;
import com.amazonaws.services.dynamodbv2.document.Item;
import com.amazonaws.services.dynamodbv2.document.PrimaryKey;
import com.amazonaws.services.dynamodbv2.document.Table;
import com.amazonaws.services.dynamodbv2.document.spec.UpdateItemSpec;
import com.amazonaws.services.dynamodbv2.document.utils.ValueMap;
import com.amazonaws.services.dynamodbv2.model.ReturnValue;

public class App {
    public static Table table;
    public static final String TABLE_NAME = "Music";

    public static void main(String[] args) {
        table = getTableLocal();
        putItem();
        getItem();
        updateItem();
        getItem();
        deleteItem();
        getItem();
    }

    public static Table getTable() {
        return new DynamoDB(
                getDynamoDBClient(
                        getCredentialsSincePipeline()
                ).build()
        ).getTable(TABLE_NAME);
    }

    public static Table getTableLocal() {
        return new DynamoDB(
                getDynamoDBClient(
                        new AwsClientBuilder.EndpointConfiguration(
                                "http://localhost:8000",
                                Regions.US_EAST_1.getName())
                ).build()
        ).getTable(TABLE_NAME);
    }

    public static AmazonDynamoDBClientBuilder getDynamoDBClient(AWSCredentialsProvider awsCredentialsProvider) {
        return AmazonDynamoDBClientBuilder
                .standard()
                .withRegion(Regions.US_EAST_1)
                .withCredentials(awsCredentialsProvider);
    }

    public static AmazonDynamoDBClientBuilder getDynamoDBClient(AwsClientBuilder.EndpointConfiguration endpointConfiguration) {
        return AmazonDynamoDBClientBuilder
                .standard()
                .withEndpointConfiguration(endpointConfiguration);
    }

    private static AWSCredentialsProvider getCredentialsSincePipeline() {
        return new AWSStaticCredentialsProvider(new BasicSessionCredentials(
                System.getProperty("accessKey"),
                System.getProperty("secretKey"),
                System.getProperty("sessionToken"))
        );
    }

    public static void putItem() {
        System.out.println("********************Imprima PUT ITEM aca**************");
        table.putItem(new Item()
                .withPrimaryKey(new PrimaryKey("Artist"
                        ,"Juanes"
                        ,"SongTitle"
                        ,"La camisa negra"))
                .with("description", "Its a good song")).getPutItemResult().toString();
        System.out.println("********************Termina el put**************");
    }

    public static void getItem() {
        System.out.println("********************Imprima GET ITEM aca**************");
        System.out.println(table.getItem(new PrimaryKey("Artist"
                ,"Juanes"
                ,"SongTitle"
                ,"La camisa negra")).toJSONPretty());
        System.out.println("********************Termina el get**************");
    }

    public static void deleteItem() {
        System.out.println("********************Imprima Delete ITEM aca**************");
        System.out.println(table.deleteItem(new PrimaryKey("Artist"
                ,"Juanes"
                ,"SongTitle"
                ,"La camisa negra")));
        System.out.println("********************Termina el DELETE**************");
    }

    public static void updateItem() {
        UpdateItemSpec updateItemSpec = new UpdateItemSpec()
                .withPrimaryKey(new PrimaryKey("Artist"
                        ,"Juanes"
                        ,"SongTitle"
                        ,"La camisa negra"))
                .withUpdateExpression("set description = :d")
                .withValueMap(new ValueMap()
                        .withString(":d", "Its a great song"))
                .withReturnValues(ReturnValue.UPDATED_NEW);

        // Check the response.
        System.out.println("********************Imprima UPDATE ITEM aca**************");
        System.out.println(table.updateItem(updateItemSpec).getItem().toJSONPretty());
        System.out.println("********************Termina el UPDATE**************");
    }
}
